{"version":3,"sources":["components/ErrorCard.tsx","components/BoardCard.tsx","hooks/useLeaderboard.ts","theme.ts","components/EntryListItem.tsx","components/EntryListHeader.tsx","components/ShareBanner/codestar.svg","components/ShareBanner/ordina.svg","components/ShareBanner/github.svg","components/ShareBanner/linkedin.svg","components/ShareBanner/medium.svg","components/ShareBanner/meetup.svg","components/ShareBanner/youtube.svg","components/ShareBanner/ShareBanner.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["StyledCardContent","withStyles","theme","root","backgroundColor","red","CardContent","ErrorCard","errorMessage","technicalMessage","Card","Typography","variant","StyledCard","StyledCardHeader","palette","primary","dark","textAlign","title","color","fontFamily","CardHeader","BoardCard","children","sortEntry","entry","otherEntry","score","useLeaderboard","useState","entries","setEntries","isLoading","setIsLoading","error","setError","useEffect","fetchData","a","fetch","then","data","json","response","length","sort","reverse","toString","Promise","resolve","setTimeout","createFetchData","setInterval","darkTheme","createMuiTheme","type","orange","EntryTypography","body1","fontWeight","body2","fontSize","formatDate","input","date","Date","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","getMedal","index","EntryListItem","name","ListItem","Grid","container","wrap","item","xs","zeroMinWidth","Tooltip","noWrap","EntryListHeader","ShareBanner","style","margin","spacing","align","Link","href","alt","src","codestarLogo","ordinaLogo","justify","githubIcon","linkedinIcon","mediumIcon","meetupIcon","youtubeIcon","App","entryListItems","map","ThemeProvider","Container","maxWidth","height","direction","marginTop","LinearProgress","List","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wUASMA,EAAoBC,aAAW,SAACC,GAAD,MAAmB,CACpDC,KAAM,CACJC,gBAAiBC,IAAI,SAFDJ,CAIpBK,KAaSC,EAXc,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,aAAcC,EAAuB,EAAvBA,iBAC5C,OACE,cAACC,EAAA,EAAD,UACE,eAACV,EAAD,WACI,cAACW,EAAA,EAAD,UAAaH,IACZC,GAAoB,cAACE,EAAA,EAAD,CAAYC,QAAQ,QAApB,SAA6BH,U,QCXtDI,EAAaZ,aAAW,iBAAO,CACnCE,KAAM,CACJC,gBAAiB,kBAFFH,CAIfS,KAEEI,EAAmBb,aAAW,SAACC,GAAD,MAAmB,CACrDC,KAAM,CACJC,gBAAiBF,EAAMa,QAAQC,QAAQC,KACvCC,UAAW,UAEbC,MAAO,CACLC,MAAO,QACPC,WAAY,kCAPSpB,CASrBqB,KAEEtB,EAAoBC,aAAW,iBAAO,CAC1CE,KAAM,CACJC,gBAAiB,yBAFKH,CAItBK,KAWWiB,EATO,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACvB,OACE,eAACX,EAAD,WACE,cAACC,EAAD,CAAkBK,MAAM,2BACxB,cAAC,EAAD,UAAoBK,Q,iCC1BpBC,EAAY,SAACC,EAAcC,GAAf,OAChBD,EAAME,MAAQD,EAAWC,OAsDZC,EAdQ,WAAO,IAAD,EACGC,mBAAkB,IADrB,mBACpBC,EADoB,KACXC,EADW,OAEOF,oBAAkB,GAFzB,mBAEpBG,EAFoB,KAETC,EAFS,OAGDJ,qBAHC,mBAGpBK,EAHoB,KAGbC,EAHa,KAW3B,OANAC,qBAAU,WACR,IAAMC,EAvCc,SACtBN,EACAE,EACAE,GAHsB,6BAInB,4BAAAG,EAAA,6DACHL,GAAa,GADV,kBAGsBM,MACrB,6EACAC,MAAK,SAACC,GAAD,OAAUA,EAAKC,UALrB,QAGKC,EAHL,QAOYC,OAAS,EACpBb,EAAWY,EAASE,KAAKrB,GAAWsB,WAEpCX,EAAS,CAAE5B,aAAc,iCAV1B,gDAaD4B,EAAS,CACP5B,aAAc,+BACdC,iBAAkB,KAAIuC,aAfvB,yBARH,IAAIC,SAAQ,SAACC,GACXC,WAAWD,EAAS,QAOnB,QAyBHhB,GAAa,GAzBV,yDAmCiBkB,CAAgBpB,EAAYE,EAAcE,GAC9CiB,YAAYf,EAlDX,KAmDfA,MACC,IAEI,CAAEP,UAASE,YAAWE,U,gBCpDhBmB,EAPGC,YAAe,CAC/BxC,QAAS,CACPyC,KAAM,OACNxC,QAASyC,O,gBCUPC,EAAkBzD,aAAW,SAACC,GAAD,MAAmB,CACpDyD,MAAO,CACLC,WAAY,OACZvC,WAAY,+BAEdwC,MAAO,CACLxC,WAAY,8BACZyC,SAAU,UAPU7D,CASpBU,KAEEoD,EAAa,SAACC,GAClB,IAAMC,EAAO,IAAIC,KAAKF,GAStB,OARkB,IAAIG,KAAKC,eAAe,QAAS,CACjDC,KAAM,UACNC,MAAO,UACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,UACRC,OAAQ,YACPC,OAAOV,IAINW,EAAW,SAACC,GAChB,OAAa,IAAVA,EACM,eAEI,IAAVA,EACM,eAEI,IAAVA,EACM,eAEF,IAsBMC,EAnBkB,SAAC,GAAD,IAAGD,EAAH,EAAGA,MAAH,IAAUnD,MAASqD,EAAnB,EAAmBA,KAAMd,EAAzB,EAAyBA,KAAMrC,EAA/B,EAA+BA,MAA/B,OAC/B,cAACoD,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,KAAK,SAArB,UACE,eAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,UACGR,EAAOD,EAASC,MAEnB,eAACI,EAAA,EAAD,CAAMG,MAAI,EAACC,IAAE,EAACC,cAAY,EAA1B,UACE,cAACC,EAAA,EAAD,CAASpE,MAAO4D,EAAhB,SACE,cAACrB,EAAD,CAAiB8B,QAAM,EAAvB,SAAyBT,MAE3B,cAACrB,EAAD,CAAiB9C,QAAQ,QAAzB,SAAkCmD,EAAWE,QAE/C,cAACgB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACGzD,UCjDM6D,EAda,kBAC1B,cAACT,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACf,cAACJ,EAAA,EAAD,CAAMG,MAAI,EAACC,IAAE,EAAb,SACE,cAAC1E,EAAA,EAAD,CAAYC,QAAQ,KAApB,oBAEF,cAACqE,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACE,cAAC1E,EAAA,EAAD,CAAYC,QAAQ,KAApB,2BCXO,MAA0B,qCCA1B,MAA0B,mCCA1B,MAA0B,mCCA1B,MAA0B,qCCA1B,MAA0B,mCCA1B,MAA0B,mCCA1B,MAA0B,oCCgE1B8E,EAnDS,WACtB,OACE,sBAAKC,MAAO,CAAEC,OAAQ,QAAtB,UACE,eAACX,EAAA,EAAD,CAAMC,WAAS,EAACW,QAAS,EAAzB,UACE,eAACZ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,UACE,cAAC1E,EAAA,EAAD,CAAYmF,MAAM,SAAlB,qBAAgD,IAChD,cAACC,EAAA,EAAD,CAAMC,KAAK,2CAAX,SACE,qBACEC,IAAI,uDACJC,IAAKC,SAIX,eAAClB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,UACE,cAAC1E,EAAA,EAAD,CAAYmF,MAAM,SAAlB,wBAAmD,IACnD,cAACC,EAAA,EAAD,CAAMC,KAAK,2CAAX,SACE,qBAAKC,IAAI,kBAAkBC,IAAKE,YAItC,eAACnB,EAAA,EAAD,CAAMC,WAAS,EAACW,QAAS,EAAGQ,QAAQ,SAApC,UACE,cAACpB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACE,cAACU,EAAA,EAAD,CAAMC,KAAK,+BAAX,SACE,qBAAKC,IAAI,qBAAqBC,IAAKI,QAGvC,cAACrB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACE,cAACU,EAAA,EAAD,CAAMC,KAAK,8DAAX,SACE,qBAAKC,IAAI,uBAAuBC,IAAKK,QAGzC,cAACtB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACE,cAACU,EAAA,EAAD,CAAMC,KAAK,mCAAX,SACE,qBAAKC,IAAI,qBAAqBC,IAAKM,QAGvC,cAACvB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACE,cAACU,EAAA,EAAD,CAAMC,KAAK,yCAAX,SACE,qBAAKC,IAAI,qBAAqBC,IAAKO,QAGvC,cAACxB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACE,cAACU,EAAA,EAAD,CAAMC,KAAK,qCAAX,SACE,qBAAKC,IAAI,sBAAsBC,IAAKQ,eCQjCC,EA9CC,WAAO,IAAD,EACkB9E,IAA9BE,EADY,EACZA,QAASE,EADG,EACHA,UAAWE,EADR,EACQA,MAEtByE,EAAiB7E,EAAQ8E,KAAI,SAACnF,EAAOmD,GAAR,OACjC,cAAC,EAAD,CAAgCA,MAAOA,EAAQ,EAAGnD,MAAOA,GAArCA,EAAMqD,SAG5B,OACE,cAAC+B,EAAA,EAAD,CAAe5G,MAAOA,EAAtB,SACE,cAAC6G,EAAA,EAAD,CAAWC,SAAS,KAAKrB,MAAO,CAAEsB,OAAQ,QAA1C,SACE,eAAChC,EAAA,EAAD,CACEC,WAAS,EACTgC,UAAU,SACVrB,QAAS,EAETF,MAAO,CAAEsB,OAAQ,OAAQE,UAAW,GACpChC,KAAK,SANP,UAQGhD,GACC,cAAC8C,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAAC,EAAD,CACE5E,aAAc2B,EAAM3B,aACpBC,iBAAkB0B,EAAM1B,qBAI9B,cAACwE,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,eAAC,EAAD,WACE,eAACzE,EAAA,EAAD,4EACiE,IAC/D,cAACoF,EAAA,EAAD,CAAMC,KAAK,mBAAX,mCAFF,OAIA,cAAC,EAAD,IACC/D,EAAY,cAACmF,EAAA,EAAD,CAAgBjG,MAAM,+BAAkC,qBAAKwE,MAAO,CAAEsB,OAAQ,SAC3F,eAACI,EAAA,EAAD,WACE,cAAC,EAAD,IACCT,kBCxCFU,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqB/E,MAAK,YAAkD,IAA/CgF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f3007fb2.chunk.js","sourcesContent":["import React, { FC } from \"react\";\nimport { Card, CardContent, Theme, Typography, withStyles } from \"@material-ui/core\";\nimport { red } from \"@material-ui/core/colors\";\n\ninterface Props {\n  errorMessage: string;\n  technicalMessage?: string;\n}\n\nconst StyledCardContent = withStyles((theme: Theme) => ({\n    root: {\n      backgroundColor: red[500],\n    },\n  }))(CardContent);\n  \nconst ErrorCard: FC<Props> = ({ errorMessage, technicalMessage }) => {\n  return (\n    <Card>\n      <StyledCardContent>\n          <Typography>{errorMessage}</Typography>\n          {technicalMessage && <Typography variant=\"body2\">{technicalMessage}</Typography>}\n      </StyledCardContent>\n    </Card>\n  );\n};\n\nexport default ErrorCard;\n","import React, { FC } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Theme,\n  withStyles,\n} from \"@material-ui/core\";\n\nconst StyledCard = withStyles(() => ({\n  root: {\n    backgroundColor: \"transparent\",\n  },\n}))(Card);\n\nconst StyledCardHeader = withStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.primary.dark,\n    textAlign: \"center\",\n  },\n  title: {\n    color: \"black\",\n    fontFamily: \"Vibrocentric-Regular, serif\",\n  },\n}))(CardHeader);\n\nconst StyledCardContent = withStyles(() => ({\n  root: {\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n  },\n}))(CardContent);\n\nconst BoardCard: FC = ({ children }) => {\n  return (\n    <StyledCard>\n      <StyledCardHeader title=\"FREELANCER LEADERBOARD\" />\n      <StyledCardContent>{children}</StyledCardContent>\n    </StyledCard>\n  );\n};\n\nexport default BoardCard;\n","import { useState, useEffect } from \"react\";\nimport { Entry } from \"./Entry.type\";\nimport { generateMockEntries, staticMockResponse } from \"./mockResponse\";\n\ntype LeaderboardError =\n  | { errorMessage: string; technicalMessage?: string }\n  | undefined;\n\nconst REFRESH_MS = 3000 * 1000;\n\nconst sortEntry = (entry: Entry, otherEntry: Entry): number =>\n  entry.score - otherEntry.score;\n\nconst forceWait = () =>\n  new Promise((resolve) => {\n    setTimeout(resolve, 1000);\n  });\n\nconst createFetchData = (\n  setEntries: (entries: Entry[]) => void,\n  setIsLoading: (_: boolean) => void,\n  setError: (_: LeaderboardError) => void\n) => async () => {\n  setIsLoading(true);\n  try {\n    const response = await fetch(\n      \"https://u3jbutkvth.execute-api.eu-west-1.amazonaws.com/prod/scores?seed=4\"\n    ).then((data) => data.json());\n\n    if (response.length > 0) {\n      setEntries(response.sort(sortEntry).reverse());\n    } else {\n      setError({ errorMessage: \"Could not update leaderboard\" });\n    }\n  } catch (err) {\n    setError({\n      errorMessage: \"Could not update leaderboard\",\n      technicalMessage: err.toString(),\n    });\n  }\n\n  // For debugging\n  // setEntries(staticMockResponse.sort(sortEntry).reverse());\n  // setEntries(generateMockEntries(100).sort(sortEntry).reverse());\n\n  // Request is too fast, show progressbar a bit longer so the visitor knows the scores will be updated\n  await forceWait(); \n  setIsLoading(false);\n};\n\n// TODO clean up timer on unmount\nconst useLeaderboard = () => {\n  const [entries, setEntries] = useState<Entry[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [error, setError] = useState<LeaderboardError>();\n\n  useEffect(() => {\n    const fetchData = createFetchData(setEntries, setIsLoading, setError);\n    const timer = setInterval(fetchData, REFRESH_MS);\n    fetchData();\n  }, []);\n\n  return { entries, isLoading, error };\n};\n\nexport default useLeaderboard;\n","import { createMuiTheme } from \"@material-ui/core\";\nimport { orange } from \"@material-ui/core/colors\";\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    primary: orange,\n  },\n});\n\nexport default darkTheme;\n","import React, { FC } from \"react\";\nimport {\n  ListItem,\n  Grid,\n  Typography,\n  withStyles,\n  Theme,\n  Tooltip,\n} from \"@material-ui/core\";\nimport { Entry } from \"../hooks/Entry.type\";\n\ninterface Props {\n  index: number;\n  entry: Entry;\n}\n\nconst EntryTypography = withStyles((theme: Theme) => ({\n  body1: {\n    fontWeight: \"bold\",\n    fontFamily: \"Vibrocentric-Regular, serif\",\n  },\n  body2: {\n    fontFamily: \"Vibrocentric-Regular, serif\",\n    fontSize: \"70%\",\n  },\n}))(Typography);\n\nconst formatDate = (input: string) => {\n  const date = new Date(input);\n  const formatted = new Intl.DateTimeFormat(\"nl-NL\", {\n    year: \"numeric\",\n    month: \"numeric\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\",\n    second: \"numeric\",\n  }).format(date);\n  return formatted;\n};\n\nconst getMedal = (index: number): string => {\n  if(index === 1) {\n    return \"🥇\"\n  }\n  if(index === 2) {\n    return \"🥈\"\n  }\n  if(index === 3) {\n    return \"🥉\"\n  }\n  return \"\";\n}\n\nconst EntryListItem: FC<Props> = ({ index, entry: { name, date, score } }) => (\n  <ListItem>\n    <Grid container wrap=\"nowrap\">\n      <Grid item xs={2}>\n        {index}{getMedal(index)}\n      </Grid>\n      <Grid item xs zeroMinWidth>\n        <Tooltip title={name}>\n          <EntryTypography noWrap>{name}</EntryTypography>\n        </Tooltip>\n        <EntryTypography variant=\"body2\">{formatDate(date)}</EntryTypography>\n      </Grid>\n      <Grid item xs={3}>\n        {score}\n      </Grid>\n    </Grid>\n  </ListItem>\n);\n\nexport default EntryListItem;\n","import React, { FC } from \"react\";\nimport { ListItem, Grid, Typography } from \"@material-ui/core\";\n\nconst EntryListHeader: FC = () => (\n  <ListItem>\n    <Grid container>\n      <Grid item xs={1}></Grid>\n      <Grid item xs>\n        <Typography variant=\"h6\">Name</Typography>\n      </Grid>\n      <Grid item xs={3}>\n        <Typography variant=\"h6\">Score</Typography>\n      </Grid>\n    </Grid>\n  </ListItem>\n);\n\nexport default EntryListHeader;\n","export default __webpack_public_path__ + \"static/media/codestar.d773d788.svg\";","export default __webpack_public_path__ + \"static/media/ordina.e9dcda45.svg\";","export default __webpack_public_path__ + \"static/media/github.1ba3cd4d.svg\";","export default __webpack_public_path__ + \"static/media/linkedin.642e2807.svg\";","export default __webpack_public_path__ + \"static/media/medium.84479c28.svg\";","export default __webpack_public_path__ + \"static/media/meetup.2acc9cf9.svg\";","export default __webpack_public_path__ + \"static/media/youtube.01fbe4b6.svg\";","import React, { FC } from \"react\";\nimport { Typography, Link, Grid } from \"@material-ui/core\";\nimport codestarLogo from \"./codestar.svg\";\nimport ordinaLogo from \"./ordina.svg\";\n// https://github.com/edent/SuperTinyIcons/\nimport githubIcon from \"./github.svg\";\nimport linkedinIcon from \"./linkedin.svg\";\nimport mediumIcon from \"./medium.svg\";\nimport meetupIcon from \"./meetup.svg\";\nimport youtubeIcon from \"./youtube.svg\";\n\n// TODO add user tracking?\n\nconst ShareBanner: FC = () => {\n  return (\n    <div style={{ margin: \"1rem\" }}>\n      <Grid container spacing={4}>\n        <Grid item xs={6}>\n          <Typography align=\"center\">Made by</Typography>{\" \"}\n          <Link href=\"https://www.ordina.nl/vakgebieden/scala/\">\n            <img\n              alt=\"Codestar - Passionate programmers. Powered by Ordina\"\n              src={codestarLogo}\n            />\n          </Link>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography align=\"center\">Powered by</Typography>{\" \"}\n          <Link href=\"https://www.ordina.nl/vakgebieden/scala/\">\n            <img alt=\"Ahead of change\" src={ordinaLogo} />\n          </Link>\n        </Grid>\n      </Grid>\n      <Grid container spacing={1} justify=\"center\">\n        <Grid item xs={1}>\n          <Link href=\"https://github.com/code-star\">\n            <img alt=\"Codestar on Github\" src={githubIcon} />\n          </Link>\n        </Grid>\n        <Grid item xs={1}>\n          <Link href=\"https://www.linkedin.com/company/codestar-powered-by-ordina\">\n            <img alt=\"Codestar on LinkedIn\" src={linkedinIcon} />\n          </Link>\n        </Grid>\n        <Grid item xs={1}>\n          <Link href=\"https://medium.com/codestar-blog\">\n            <img alt=\"Codestar on Medium\" src={mediumIcon} />\n          </Link>\n        </Grid>\n        <Grid item xs={1}>\n          <Link href=\"https://www.meetup.com/Codestar-Night/\">\n            <img alt=\"Codestar on Meetup\" src={meetupIcon} />\n          </Link>\n        </Grid>\n        <Grid item xs={1}>\n          <Link href=\"https://www.youtube.com/c/codestar\">\n            <img alt=\"Codestar on Youtube\" src={youtubeIcon} />\n          </Link>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default ShareBanner;\n","import React, { FC } from \"react\";\nimport \"./App.css\";\nimport {\n  Container,\n  ThemeProvider,\n  List,\n  Grid,\n  Typography,\n  Link, LinearProgress\n} from \"@material-ui/core\";\nimport ErrorCard from \"./components/ErrorCard\";\nimport BoardCard from \"./components/BoardCard\";\nimport useLeaderboard from \"./hooks/useLeaderboard\";\nimport theme from \"./theme\";\nimport EntryListItem from \"./components/EntryListItem\";\nimport EntryListHeader from \"./components/EntryListHeader\";\nimport ShareBanner from \"./components/ShareBanner/ShareBanner\";\n\nconst App: FC = () => {\n  const { entries, isLoading, error } = useLeaderboard();\n\n  const entryListItems = entries.map((entry, index) => (\n    <EntryListItem key={entry.name} index={index + 1} entry={entry} />\n  ));\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container maxWidth=\"sm\" style={{ height: \"100%\" }}>\n        <Grid\n          container\n          direction=\"column\"\n          spacing={4}\n          // Reset marginTop to prevent not full height\n          style={{ height: \"100%\", marginTop: 0 }}\n          wrap=\"nowrap\"\n        >\n          {error && (\n            <Grid item>\n              <ErrorCard\n                errorMessage={error.errorMessage}\n                technicalMessage={error.technicalMessage}\n              />\n            </Grid>\n          )}\n          <Grid item>\n            <BoardCard>\n              <Typography>\n                Try out the Freelancer challenge and see your high score here.{\" \"}\n                <Link href=\"./Freelancer.pdf\">More info in this PDF</Link>.\n              </Typography>\n              <ShareBanner />\n              {isLoading ? <LinearProgress title=\"Loading new high scores...\" /> : <div style={{ height: \"4px\"}} />}\n              <List>\n                <EntryListHeader />\n                {entryListItems}\n              </List>\n            </BoardCard>\n          </Grid>\n        </Grid>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}